{"version":3,"sources":["rcomps/styles/getButtonCss.ts","rcomps/styles/getFloatCss.ts","rcomps/Button.tsx","rcomps/Link.tsx","rcomps/ButtonLink.tsx","rcomps/Spinner.tsx","rcomps/helpers/hex2rgb.ts","rcomps/ButtonSpin.tsx","rcomps/ChartRing.tsx","rcomps/Dimensions.tsx","rcomps/Pair.tsx","rcomps/SpinnerAndMessage.tsx","rcomps/TopMenu.tsx","gate/themes.ts","gate/styles.ts","gate/GateStore.ts","gate/translations.ts","gate/GateKeeper.tsx","gate/MainMenu.tsx","pages/Dashboard.tsx","pages/Home.tsx","pages/NotFound.tsx","gate/init.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["getButtonCss","width","height","paddingHoriz","borderRadius","fontSize","fontWeight","color","colorDisabled","backgroundColor","hoverColor","disabled","css","Button","href","onClick","children","buttonCss","e","preventDefault","window","location","Link","rest","style","cursor","ButtonLink","Spinner","size","f","d","thickness","hex","result","exec","r","parseInt","g","b","hex2rgb","cpt2","cpt5","cpt7","label","substr","className","ButtonSpin","spin","colorSpinner","sizes","maxWidth","Narrow","isPhone","useMediaQuery","Wide","Pair","left","right","spacing","styleLeft","styleRight","spaceBetween","display","flexDirection","justifyContent","alignItems","lineHeight","paddingRight","SpinnerAndMessage","message","gap","TopMenu","entries","centered","desktopMaxWidth","entriesSpacing","paddingLeft","minHeight","length","Error","slice","map","i","key","AmplifyTheme","button","sectionBody","padding","sectionHeader","theme3","formSection","boxShadow","a","input","oAuthSignInButton","strike","stylesGateKeeper","root","container","facebook","google","txt","orLineContainer","orLine","gate","observers","state","loggedIn","loading","lastError","user","username","sub","onChange","Object","keys","forEach","name","subscribe","observer","access","getUserData","Promise","resolve","reject","err","data","logout","Auth","signOut","JSON","stringify","listener","authData","payload","event","readUser","currentAuthenticatedUser","maybeUser","attributes","Hub","listen","this","I18n","putVocabularies","pt","Email","Code","Confirm","Username","or","Submit","Hello","Change","Password","Verify","Skip","signUpConfigEn","hiddenDefaults","header","signUpFields","required","placeholder","type","displayOrder","signUpConfigPt","GateKeeper","lang","useState","setLoading","setLoggedIn","useEffect","setLanguage","handleFacebookLogin","federatedSignIn","provider","CognitoHostedUIIdentityProvider","Facebook","handleGoogleLogin","Google","str","styles","Fragment","hide","Greetings","theme","signUpConfig","usernameAttributes","UsernameAttributes","EMAIL","MainMenu","NarrowLogoSvg","NarrowLogoIcon","narrowMiddleEntries","narrowShowEmail","narrowLogoSize","narrowButtonColor","narrowButtonHoverColor","narrowButtonHeight","WideLogoSvg","WideLogoIcon","wideMiddleEntries","wideShowEmail","wideLogoHeight","wideLogoWidth","wideMaxPageWidth","wideButtonColor","wideButtonColorDisabled","wideButtonColorSpinner","wideButtonBackgroundColor","wideButtonHoverColor","wideButtonBorderRadius","wideButtonFontWeight","wideButtonHeight","wideButtonWidth","loginText","logoutText","emailFontSize","emailColor","getEmail","handleLogInOut","email","narrowArray","concat","wideArray","to","Dashboard","Home","text","setText","results","setResults","run","currentSession","session","idToken","getIdToken","getJwtToken","client","GraphQLClient","headers","authorization","request","res","console","log","alert","value","target","rows","cols","NotFound","userPoolId","userPoolWebClientId","oauthDomain","redirectSignIn","redirectSignOut","awsRegion","Amplify","configure","region","oauth","domain","scope","responseType","init","Boolean","hostname","match","ReactDOM","render","setAccess","IconHouseThreeD","path","default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.47f93f18.chunk.js","sourcesContent":["import { css } from '@emotion/core';\n\nexport const getButtonCss = (\n  width = 0, // optional\n  height = 40,\n  paddingHoriz = 28,\n  borderRadius = 0,\n  fontSize = 0, // optional\n  fontWeight = 'normal',\n  color = '#343434',\n  colorDisabled = '#666666',\n  backgroundColor = '#ebebeb',\n  hoverColor = '#d7d7d7',\n  disabled = false,\n) => css`\n  ${width > 0 && `width: ${width}px;`}\n  height: ${height}px;\n  padding-left: ${paddingHoriz}px;\n  padding-right: ${paddingHoriz}px;\n  border-radius: ${borderRadius}px;\n  border-width: 0;\n  ${fontSize > 0 && `font-size: ${fontSize}px;`}\n  font-weight: ${fontWeight};\n  ${!disabled && `cursor: pointer`};\n  color: ${disabled ? colorDisabled : color};\n  background-color: ${backgroundColor};\n  ${!disabled && `&:hover { background-color: ${hoverColor}; }`}\n  transition: all 0.3s ease;\n`;\n","import { css } from '@emotion/core';\n\nexport const getFloatCss = (show: boolean, height?: number) => css`\n  display: ${show ? 'block' : 'none'};\n  position: absolute;\n  background-color: #f9f9f9;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n  ${height && `height: ${height}px; overflow: auto;`}\n  a {\n    color: black;\n    padding: 12px 16px;\n    text-decoration: none;\n    display: block;\n    cursor: pointer;\n  }\n  a:hover {\n    background-color: #f1f1f1;\n  }\n`;\n","import React from 'react';\n/** @jsx jsx */ import { jsx } from '@emotion/core';\nimport { getButtonCss } from './styles';\n\nexport interface IButtonProps {\n  href?: string;\n  onClick?: () => void;\n  width?: number;\n  height?: number;\n  paddingHoriz?: number;\n  borderRadius?: number;\n  fontSize?: number;\n  fontWeight?: string;\n  color?: string;\n  colorDisabled?: string;\n  backgroundColor?: string;\n  hoverColor?: string;\n  disabled?: boolean;\n}\n\nexport const Button: React.FC<IButtonProps> = ({\n  href,\n  onClick,\n  width = 0, // optional\n  height = 40,\n  paddingHoriz = 28,\n  borderRadius = 6,\n  fontSize = 0, // optional\n  fontWeight = 'normal',\n  color = '#343434',\n  colorDisabled = '#666666',\n  backgroundColor = '#ebebeb',\n  hoverColor = '#d7d7d7',\n  disabled,\n  children,\n}) => {\n  const buttonCss = getButtonCss(\n    width,\n    height,\n    paddingHoriz,\n    borderRadius,\n    fontSize,\n    fontWeight,\n    color,\n    colorDisabled,\n    backgroundColor,\n    hoverColor,\n    disabled,\n  );\n\n  return (\n    <button\n      css={buttonCss}\n      disabled={disabled}\n      onClick={e => {\n        e.preventDefault();\n        if (href) {\n          window.location.href = href;\n        } else if (onClick) {\n          onClick();\n        }\n      }}\n    >\n      {children}\n    </button>\n  );\n};\n","import React from 'react';\n\nexport interface ILinkProps {\n  href?: string;\n  onClick?: () => void;\n}\n\nexport const Link: React.FC<ILinkProps> = ({ href, children, ...rest }) => {\n  if (href) {\n    return (\n      <a href={href} {...rest} style={{ cursor: 'pointer' }}>\n        {children}\n      </a>\n    );\n  }\n  // eslint-disable-next-line\n  return (\n    <a {...rest} style={{ cursor: 'pointer' }}>\n      {children}\n    </a>\n  );\n};\n","import React from 'react';\n/** @jsx jsx */ import { jsx, css } from '@emotion/core';\nimport { Link } from './Link';\n\nexport interface IButtonLinkProps {\n  href?: string;\n  onClick?: () => void;\n  color?: string;\n  hoverColor?: string;\n}\n\nexport const ButtonLink: React.FC<IButtonLinkProps> = ({\n  href,\n  onClick,\n  color = '#343434',\n  hoverColor = '#c7c7c7',\n  children,\n}) => {\n  return (\n    <Link\n      href={href}\n      onClick={onClick}\n      css={css`\n        color: ${color};\n        cursor: pointer;\n        transition: all 0.3s ease;\n        &:hover {\n          color: ${hoverColor};\n          background-image: none;\n        }\n      `}\n    >\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\n// tslint:disable-next-line: align\n/** @jsx jsx */ import { jsx, css } from '@emotion/core';\nimport { hex2rgb } from './helpers';\n\nexport interface ISpinnerProps {\n  size?: number;\n  color?: string;\n  thickness?: number;\n}\n\nexport const Spinner: React.FC<ISpinnerProps> = ({ size = 64, color = '#ffffff', thickness }) => {\n  const f = size / 7;\n  const d = thickness || size / 5;\n\n  const { r, g, b } = hex2rgb(color);\n\n  const cpt2 = `rgba(${r}, ${g}, ${b}, 0.2)`;\n  const cpt5 = `rgba(${r}, ${g}, ${b}, 0.5)`;\n  const cpt7 = `rgba(${r}, ${g}, ${b}, 0.7)`;\n\n  const label = `spinner-${color.substr(1)}`;\n\n  return (\n    <div\n      css={css`\n        height: ${size}px;\n        width: ${size}px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      `}\n    >\n      <div\n        className=\"loader\"\n        css={css`\n          font-size: ${f}px;\n          width: ${d}px;\n          height: ${d}px;\n          border-radius: 50%;\n          position: relative;\n          text-indent: -9999em;\n          -webkit-animation: ${label} 1.1s infinite ease;\n          animation: ${label} 1.1s infinite ease;\n          -webkit-transform: translateZ(0);\n          -ms-transform: translateZ(0);\n          transform: translateZ(0);\n          @-webkit-keyframes ${label} {\n            0%,\n            100% {\n              box-shadow: 0em -2.6em 0em 0em ${color}, 1.8em -1.8em 0 0em ${cpt2},\n                2.5em 0em 0 0em ${cpt2}, 1.75em 1.75em 0 0em ${cpt2}, 0em 2.5em 0 0em ${cpt2},\n                -1.8em 1.8em 0 0em ${cpt2}, -2.6em 0em 0 0em ${cpt5}, -1.8em -1.8em 0 0em ${cpt7};\n            }\n            12.5% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt7}, 1.8em -1.8em 0 0em ${color},\n                2.5em 0em 0 0em ${cpt2}, 1.75em 1.75em 0 0em ${cpt2}, 0em 2.5em 0 0em ${cpt2},\n                -1.8em 1.8em 0 0em ${cpt2}, -2.6em 0em 0 0em ${cpt2}, -1.8em -1.8em 0 0em ${cpt5};\n            }\n            25% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt5}, 1.8em -1.8em 0 0em ${cpt7},\n                2.5em 0em 0 0em ${color}, 1.75em 1.75em 0 0em ${cpt2}, 0em 2.5em 0 0em ${cpt2},\n                -1.8em 1.8em 0 0em ${cpt2}, -2.6em 0em 0 0em ${cpt2}, -1.8em -1.8em 0 0em ${cpt2};\n            }\n            37.5% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt2}, 1.8em -1.8em 0 0em ${cpt5},\n                2.5em 0em 0 0em ${cpt7}, 1.75em 1.75em 0 0em ${color}, 0em 2.5em 0 0em ${cpt2},\n                -1.8em 1.8em 0 0em ${cpt2}, -2.6em 0em 0 0em ${cpt2}, -1.8em -1.8em 0 0em ${cpt2};\n            }\n            50% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt2}, 1.8em -1.8em 0 0em ${cpt2},\n                2.5em 0em 0 0em ${cpt5}, 1.75em 1.75em 0 0em ${cpt7}, 0em 2.5em 0 0em ${color},\n                -1.8em 1.8em 0 0em ${cpt2}, -2.6em 0em 0 0em ${cpt2}, -1.8em -1.8em 0 0em ${cpt2};\n            }\n            62.5% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt2}, 1.8em -1.8em 0 0em ${cpt2},\n                2.5em 0em 0 0em ${cpt2}, 1.75em 1.75em 0 0em ${cpt5}, 0em 2.5em 0 0em ${cpt7},\n                -1.8em 1.8em 0 0em ${color}, -2.6em 0em 0 0em ${cpt2}, -1.8em -1.8em 0 0em ${cpt2};\n            }\n            75% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt2}, 1.8em -1.8em 0 0em ${cpt2},\n                2.5em 0em 0 0em ${cpt2}, 1.75em 1.75em 0 0em ${cpt2}, 0em 2.5em 0 0em ${cpt5},\n                -1.8em 1.8em 0 0em ${cpt7}, -2.6em 0em 0 0em ${color}, -1.8em -1.8em 0 0em ${cpt2};\n            }\n            87.5% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt2}, 1.8em -1.8em 0 0em ${cpt2},\n                2.5em 0em 0 0em ${cpt2}, 1.75em 1.75em 0 0em ${cpt2}, 0em 2.5em 0 0em ${cpt2},\n                -1.8em 1.8em 0 0em ${cpt5}, -2.6em 0em 0 0em ${cpt7}, -1.8em -1.8em 0 0em ${color};\n            }\n          }\n          @keyframes ${label} {\n            0%,\n            100% {\n              box-shadow: 0em -2.6em 0em 0em ${color}, 1.8em -1.8em 0 0em ${cpt2},\n                2.5em 0em 0 0em ${cpt2}, 1.75em 1.75em 0 0em ${cpt2}, 0em 2.5em 0 0em ${cpt2},\n                -1.8em 1.8em 0 0em ${cpt2}, -2.6em 0em 0 0em ${cpt5}, -1.8em -1.8em 0 0em ${cpt7};\n            }\n            12.5% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt7}, 1.8em -1.8em 0 0em ${color},\n                2.5em 0em 0 0em ${cpt2}, 1.75em 1.75em 0 0em ${cpt2}, 0em 2.5em 0 0em ${cpt2},\n                -1.8em 1.8em 0 0em ${cpt2}, -2.6em 0em 0 0em ${cpt2}, -1.8em -1.8em 0 0em ${cpt5};\n            }\n            25% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt5}, 1.8em -1.8em 0 0em ${cpt7},\n                2.5em 0em 0 0em ${color}, 1.75em 1.75em 0 0em ${cpt2}, 0em 2.5em 0 0em ${cpt2},\n                -1.8em 1.8em 0 0em ${cpt2}, -2.6em 0em 0 0em ${cpt2}, -1.8em -1.8em 0 0em ${cpt2};\n            }\n            37.5% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt2}, 1.8em -1.8em 0 0em ${cpt5},\n                2.5em 0em 0 0em ${cpt7}, 1.75em 1.75em 0 0em ${color}, 0em 2.5em 0 0em ${cpt2},\n                -1.8em 1.8em 0 0em ${cpt2}, -2.6em 0em 0 0em ${cpt2}, -1.8em -1.8em 0 0em ${cpt2};\n            }\n            50% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt2}, 1.8em -1.8em 0 0em ${cpt2},\n                2.5em 0em 0 0em ${cpt5}, 1.75em 1.75em 0 0em ${cpt7}, 0em 2.5em 0 0em ${color},\n                -1.8em 1.8em 0 0em ${cpt2}, -2.6em 0em 0 0em ${cpt2}, -1.8em -1.8em 0 0em ${cpt2};\n            }\n            62.5% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt2}, 1.8em -1.8em 0 0em ${cpt2},\n                2.5em 0em 0 0em ${cpt2}, 1.75em 1.75em 0 0em ${cpt5}, 0em 2.5em 0 0em ${cpt7},\n                -1.8em 1.8em 0 0em ${color}, -2.6em 0em 0 0em ${cpt2}, -1.8em -1.8em 0 0em ${cpt2};\n            }\n            75% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt2}, 1.8em -1.8em 0 0em ${cpt2},\n                2.5em 0em 0 0em ${cpt2}, 1.75em 1.75em 0 0em ${cpt2}, 0em 2.5em 0 0em ${cpt5},\n                -1.8em 1.8em 0 0em ${cpt7}, -2.6em 0em 0 0em ${color}, -1.8em -1.8em 0 0em ${cpt2};\n            }\n            87.5% {\n              box-shadow: 0em -2.6em 0em 0em ${cpt2}, 1.8em -1.8em 0 0em ${cpt2},\n                2.5em 0em 0 0em ${cpt2}, 1.75em 1.75em 0 0em ${cpt2}, 0em 2.5em 0 0em ${cpt2},\n                -1.8em 1.8em 0 0em ${cpt5}, -2.6em 0em 0 0em ${cpt7}, -1.8em -1.8em 0 0em ${color};\n            }\n          }\n        `}\n      ></div>\n    </div>\n  );\n};\n","export const hex2rgb = (hex: string): { r: number; g: number; b: number } => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (result) {\n    return {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16),\n    };\n  }\n  return {\n    r: 0,\n    g: 0,\n    b: 0,\n  };\n};\n","import React from 'react';\n/** @jsx jsx */ import { jsx, css } from '@emotion/core';\nimport { IButtonProps, Button } from './Button';\nimport { Spinner } from './Spinner';\n\ninterface IButtonSpinProps extends IButtonProps {\n  spin?: boolean;\n  colorSpinner?: string;\n}\n\nexport const ButtonSpin: React.FC<IButtonSpinProps> = ({\n  spin,\n  colorSpinner = '#343434',\n  children,\n  ...rest\n}) => {\n  const { height } = rest;\n  return (\n    <Button {...rest}>\n      {spin ? (\n        <div\n          css={css`\n            display: flex;\n            justify-content: center;\n            align-items: center;\n          `}\n        >\n          <Spinner size={height && height > 25 ? height - 15 : 25} color={colorSpinner} />\n        </div>\n      ) : (\n        children\n      )}\n    </Button>\n  );\n};\n","import React from 'react';\n/** @jsx jsx */ import { jsx, css } from '@emotion/core';\n\ninterface IChartRingProps {\n  pct: number;\n  prefix?: string;\n  message?: string;\n  sufix?: string;\n  animated?: boolean;\n  color?: string;\n  thickness?: number;\n  fontSizePrefix?: string;\n  fontSizeMessage?: string;\n  fontSizeSufix?: string;\n  maxWidthPct?: number;\n  height?: number;\n}\n\nexport const ChartRing: React.FC<IChartRingProps> = ({\n  pct,\n  prefix,\n  message,\n  sufix,\n  animated = true,\n  color = '#4cc790',\n  thickness = 1.8,\n  fontSizePrefix = 4,\n  fontSizeMessage = 10,\n  fontSizeSufix = 4,\n  maxWidthPct = 100,\n  height = 250,\n}) => {\n  return (\n    <div\n      css={css`\n        ${animated ? `@keyframes progress { 0% { stroke-dasharray: 0 100; } }` : ''}\n      `}\n    >\n      <svg\n        viewBox=\"0 0 36 36\"\n        css={css`\n          display: block;\n          margin: 10px auto;\n          max-width: ${maxWidthPct}%;\n          height: ${height}px;\n        `}\n      >\n        <path\n          css={css`\n            stroke: ${color};\n            fill: none;\n            stroke-width: ${thickness};\n            stroke-linecap: round;\n            animation: progress 1s ease-out forwards;\n          `}\n          strokeDasharray={`${pct}, 100`}\n          d=\"M 18 2.0845\n             a 15.9155 15.9155 0 0 1 0 31.831\n             a 15.9155 15.9155 0 0 1 0 -31.831\"\n        />\n        {prefix && (\n          <text\n            css={css`\n              font-size: ${fontSizePrefix}px;\n            `}\n            x=\"50%\"\n            y=\"10\"\n            dominantBaseline=\"middle\"\n            textAnchor=\"middle\"\n          >\n            {prefix}\n          </text>\n        )}\n        {message && (\n          <text\n            css={css`\n              font-size: ${fontSizeMessage}px;\n            `}\n            x=\"50%\"\n            y=\"50%\"\n            dominantBaseline=\"middle\"\n            textAnchor=\"middle\"\n          >\n            {message}\n          </text>\n        )}\n        {sufix && (\n          <text\n            css={css`\n              font-size: ${fontSizeSufix}px;\n            `}\n            x=\"50%\"\n            y=\"26\"\n            dominantBaseline=\"middle\"\n            textAnchor=\"middle\"\n          >\n            {sufix}\n          </text>\n        )}\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const sizes = {\n  phone: {\n    maxWidth: 620,\n  },\n  tablet: {\n    maxWidth: 768,\n  },\n  landscape: {\n    maxWidth: 960,\n  },\n  desktop: {\n    maxPageWidth: 960,\n  },\n};\n\nexport const Phone: React.FC = ({ children }) => {\n  const isPhone = useMediaQuery({ maxWidth: sizes.phone.maxWidth });\n  return <>{isPhone ? children : null}</>;\n};\n\nexport const NotPhone: React.FC = ({ children }) => {\n  const isPhone = useMediaQuery({ maxWidth: sizes.phone.maxWidth });\n  return <>{isPhone ? null : children}</>;\n};\n\nexport const Tablet: React.FC = ({ children }) => {\n  const isTablet = useMediaQuery({\n    minWidth: sizes.phone.maxWidth + 1,\n    maxWidth: sizes.tablet.maxWidth,\n  });\n  return <>{isTablet ? children : null}</>;\n};\n\nexport const Landscape: React.FC = ({ children }) => {\n  const isLandscape = useMediaQuery({\n    minWidth: sizes.tablet.maxWidth + 1,\n    maxWidth: sizes.landscape.maxWidth,\n  });\n  return <>{isLandscape ? children : null}</>;\n};\n\nexport const NotLandscape: React.FC = ({ children }) => {\n  const isLandscape = useMediaQuery({\n    minWidth: sizes.tablet.maxWidth + 1,\n    maxWidth: sizes.landscape.maxWidth,\n  });\n  return <>{isLandscape ? null : children}</>;\n};\n\nexport const NotTablet: React.FC = ({ children }) => {\n  const isTablet = useMediaQuery({\n    minWidth: sizes.phone.maxWidth + 1,\n    maxWidth: sizes.tablet.maxWidth,\n  });\n  return <>{isTablet ? null : children}</>;\n};\n\nexport const Desktop: React.FC = ({ children }) => {\n  const isDesktop = useMediaQuery({ minWidth: sizes.landscape.maxWidth + 1 });\n  return <>{isDesktop ? children : null}</>;\n};\n\nexport const NotDesktop: React.FC = ({ children }) => {\n  const isDesktop = useMediaQuery({ minWidth: sizes.landscape.maxWidth + 1 });\n  return <>{isDesktop ? null : children}</>;\n};\n\nexport const LandscapeOrDesktop: React.FC = ({ children }) => {\n  const isLandscapeOrDesktop = useMediaQuery({ minWidth: sizes.tablet.maxWidth + 1 });\n  return <>{isLandscapeOrDesktop ? children : null}</>;\n};\n\nexport const NotLandscapeOrDesktop: React.FC = ({ children }) => {\n  const isLandscapeOrDesktop = useMediaQuery({ minWidth: sizes.tablet.maxWidth + 1 });\n  return <>{isLandscapeOrDesktop ? null : children}</>;\n};\n\nexport const Narrow = Phone;\n\nexport const Wide = NotPhone;\n","import React, { ReactNode } from 'react';\n\ninterface IPairProps {\n  left: ReactNode;\n  right: ReactNode;\n  spacing?: number;\n  styleLeft?: React.CSSProperties;\n  styleRight?: React.CSSProperties;\n  spaceBetween?: boolean;\n}\n\nexport const Pair: React.FC<IPairProps> = ({\n  left,\n  right,\n  spacing = 10,\n  styleLeft,\n  styleRight,\n  spaceBetween,\n}) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: spaceBetween ? 'space-between' : 'center',\n        alignItems: 'center',\n        lineHeight: 0,\n      }}\n    >\n      <span style={{ paddingRight: spacing, ...styleLeft }}>{left}</span>\n      <span style={styleRight}>{right}</span>\n    </div>\n  );\n};\n","import React from 'react';\n/** @jsx jsx */ import { jsx, css } from '@emotion/core';\nimport { Spinner, ISpinnerProps } from './Spinner';\n\nexport interface ISpinnerAndMessageProps extends ISpinnerProps {\n  message: string;\n  color?: string;\n  fontSize?: number;\n  gap?: number;\n}\n\nexport const SpinnerAndMessage: React.FC<ISpinnerAndMessageProps> = ({\n  message,\n  color = '#ffffff',\n  fontSize = 14,\n  gap = 20,\n  ...rest\n}) => {\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n      `}\n    >\n      <div\n        css={css`\n          margin-bottom: ${gap}px;\n        `}\n      >\n        <Spinner color={color} {...rest} />\n      </div>\n      <div\n        css={css`\n          color: ${color};\n          font-size: ${fontSize}px;\n        `}\n      >\n        {message}\n      </div>\n    </div>\n  );\n};\n","import React, { ReactNode } from 'react';\n/** @jsx jsx */ import { jsx, css } from '@emotion/core';\n\nexport type ITopMenuEntry = ReactNode; // e.g. gatsby's Link or rcomps.Link components or button\n\nexport interface ITopMenuProps {\n  entries: ITopMenuEntry[];\n  centered?: boolean;\n  desktopMaxWidth?: number;\n  entriesSpacing?: number;\n  paddingLeft?: number;\n  paddingRight?: number;\n  minHeight?: number;\n}\n\nexport const TopMenu: React.FC<ITopMenuProps> = ({\n  entries,\n  centered,\n  desktopMaxWidth = 960,\n  entriesSpacing = 30,\n  paddingLeft = 15,\n  paddingRight = 15,\n  minHeight = 60,\n}) => {\n  if (entries.length < 2) {\n    throw new Error('entries array must have at least two values');\n  }\n\n  if (centered) {\n    return (\n      <header\n        css={css`\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin: auto;\n          line-height: 0;\n          padding: ${paddingLeft}px ${paddingRight}px;\n        `}\n      >\n        {entries}\n      </header>\n    );\n  }\n\n  return (\n    <header\n      css={css`\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        min-height: ${minHeight}px;\n        margin: auto;\n        line-height: 0;\n        max-width: ${desktopMaxWidth};\n        padding: ${paddingLeft}px ${paddingRight}px;\n      `}\n    >\n      <div>{entries[0]}</div>\n      <div\n        css={css`\n          display: flex;\n          align-items: center;\n        `}\n      >\n        {entries.slice(1).map((e, i) => (\n          <span\n            key={(e as any).key}\n            css={css`\n              padding-right: ${i < entries.length - 2 ? entriesSpacing : 0}px;\n            `}\n          >\n            {e}\n          </span>\n        ))}\n      </div>\n    </header>\n  );\n};\n","import { AmplifyTheme } from 'aws-amplify-react';\n\nexport const theme0 = {};\n\nexport const theme1 = AmplifyTheme;\n\nexport const theme2 = {\n  ...AmplifyTheme,\n  button: {\n    ...AmplifyTheme.button,\n    backgroundColor: '#ebebeb',\n  },\n  sectionBody: {\n    ...AmplifyTheme.sectionBody,\n    padding: '10px',\n  },\n  sectionHeader: {\n    ...AmplifyTheme.sectionHeader,\n    backgroundColor: '#a29bfe',\n  },\n};\n\nexport const theme3 = {\n  formSection: {\n    boxShadow: '1px 1px 4px 0 rgba(0,0,0,0)',\n  },\n  button: {\n    backgroundColor: '#5d5c61',\n    fontWeight: 'bold',\n    borderRadius: 200,\n  },\n  a: {\n    color: '#3498db',\n  },\n  input: {\n    borderRadius: 200,\n  },\n  oAuthSignInButton: {\n    display: 'none',\n  },\n  strike: {\n    display: 'none',\n  },\n};\n","import { css } from '@emotion/core';\n\nexport const stylesGateKeeper = {\n  root: css`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-top: 40px;\n  `,\n\n  container: css`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-top: 40px;\n  `,\n\n  facebook: css`\n    font-size: 16px;\n    color: white;\n    background-color: #4267b2;\n    border-radius: 5px;\n    color: white;\n    height: 45px;\n    text-align: center;\n    min-width: 280px;\n    border: 0;\n    cursor: pointer;\n    &:hover {\n      background-color: #314d85;\n    }\n    border-radius: 200px;\n  `,\n\n  google: css`\n    font-size: 16px;\n    color: white;\n    background-color: #aaaaaa;\n    border-radius: 5px;\n    color: white;\n    height: 45px;\n    text-align: center;\n    min-width: 280px;\n    border: 0;\n    cursor: pointer;\n    &:hover {\n      background-color: #7f7f7f;\n    }\n    margin-top: 20px;\n    border-radius: 200px;\n  `,\n\n  txt: css`\n    min-width: 200px;\n    text-align: left;\n    background-color: red;\n  `,\n\n  orLineContainer: css`\n    width: 80%;\n    text-align: center;\n    border-bottom: 1px solid #bbb;\n    line-height: 0.1em;\n    color: #828282;\n    margin-top: 40px;\n    margin-bottom: 8px;\n  `,\n\n  orLine: css`\n    background: #fff;\n    padding: 0 25px;\n    font-size: 14px;\n    font-weight: 500;\n  `,\n};\n","import { Auth, Hub } from 'aws-amplify';\nimport { CognitoUser, UserData } from 'amazon-cognito-identity-js';\n// import { sleep } from '@cpmech/basic';\n\nexport interface IStateData {\n  loggedIn: boolean;\n  loading: boolean;\n  lastError: string;\n  user: CognitoUser | null;\n  username: string;\n  sub: string;\n}\n\nexport const newStateData = (): IStateData => ({\n  loggedIn: false,\n  loading: false,\n  lastError: '',\n  user: null,\n  username: '',\n  sub: '',\n});\n\n// IObservers defines the object to hold all observers by name\ninterface IObservers {\n  [name: string]: () => void;\n}\n\n// GateStore holds all state\nexport class GateStore {\n  // observers holds everyone who is interested in state updates\n  private observers: IObservers = {};\n\n  // all data is held here\n  // NOTE: (1) do not change anything here, use setters instead!\n  //       (2) you may read from state though\n  readonly state: IStateData = newStateData();\n\n  // onChange notifies all observers that the state has been changed\n  private onChange = () => Object.keys(this.observers).forEach(name => this.observers[name]());\n\n  constructor() {\n    Hub.listen('auth', this.listener);\n  }\n\n  // subscribe adds someone to be notified about state updates\n  // NOTE: returns a function to unsubscribe\n  subscribe = (observer: () => void, name: string): (() => void) => {\n    this.observers[name] = observer;\n    return () => {\n      delete this.observers[name];\n    };\n  };\n\n  // getters /////////////////////////////////////////////////////////////////////////////////////\n\n  access = () => !this.state.loading && this.state.loggedIn;\n\n  getUserData = (): Promise<UserData | undefined> =>\n    new Promise((resolve, reject) => {\n      if (this.state.user) {\n        this.state.user.getUserData((err, data) => {\n          if (err) {\n            return reject(err);\n          }\n          return resolve(data);\n        });\n      }\n      reject('there is no user yet');\n    });\n\n  // setters /////////////////////////////////////////////////////////////////////////////////////\n\n  logout = async () => {\n    this.state.loading = true;\n    this.state.lastError = '';\n    this.onChange();\n    try {\n      await Auth.signOut();\n      // listener should receive event\n      // and flip the loading flag\n      // and call onChange\n    } catch (error) {\n      this.state.loading = false;\n      this.state.lastError = error.message || JSON.stringify(error);\n      this.onChange();\n    }\n  };\n\n  // internal ////////////////////////////////////////////////////////////////////////////////////\n\n  private listener = async (authData: any) => {\n    const { payload } = authData;\n    const { event } = payload;\n\n    if (event !== 'configured' && event !== 'signIn' && event !== 'signOut') {\n      return;\n    }\n\n    this.state.loading = true;\n    this.state.lastError = '';\n    this.onChange();\n    // await sleep(4000);\n\n    if (event === 'configured') {\n      try {\n        await this.readUser();\n      } catch (error) {\n        /* do nothing */\n      }\n    }\n\n    if (event === 'signIn') {\n      try {\n        await this.readUser();\n      } catch (error) {\n        this.state.lastError = error.message || JSON.stringify(error);\n      }\n    }\n\n    if (event === 'signOut') {\n      this.state.loggedIn = false;\n      this.state.user = null;\n    }\n\n    this.state.loading = false;\n    this.onChange();\n  };\n\n  private readUser = async () => {\n    const maybeUser = await Auth.currentAuthenticatedUser();\n    if (!maybeUser) {\n      throw new Error('cannot get current user');\n    }\n    const { attributes } = maybeUser;\n    this.state.loggedIn = true;\n    this.state.user = maybeUser;\n    this.state.username = maybeUser.username;\n    this.state.sub = attributes.sub;\n  };\n}\n\n/////////////////////////////////////////\n// make store global ////////////////////\nexport const gate = new GateStore();\n/////////////////////////////////////////\n/////////////////////////////////////////\n","import { I18n } from 'aws-amplify';\n\nI18n.putVocabularies({\n  pt: {\n    // AuthPiece\n    Email: 'Email',\n    'Enter your email': 'Entre com seu email',\n    'Enter your username': 'Nome de usuário',\n\n    // ConfirmSignIn\n    'Confirm Code': 'Confirmar código',\n    'Confirm  Code': 'Confirmar código',\n    'Confirm SMS Code': 'Confirmar código SMS',\n    'Confirm TOPT Code': 'Confirmar código TOPT',\n    'Confirm SOFTWARE_TOKEN_MFA Code': 'Confirmar código SOFTWARE_TOKEN_MFA',\n    Code: 'Código',\n    Confirm: 'Confirmar',\n    'Back to Sign In': 'Voltar',\n\n    // ConfirmSignUp\n    'Confirm Sign Up': 'Confirmar cadastro',\n    Username: 'Nome de usuário',\n    'Confirmation Code': 'Código de confirmação',\n    'Enter your code': 'Entre o código',\n    'Lost your code? ': 'Perdeu o código? ',\n    'Resend Code': 'Enviar código novamente',\n\n    // FederatedSignIn\n    or: 'ou',\n\n    // ForgotPassword\n    'New Password': 'Nova senha',\n    'Reset your password': 'Redefinir a senha',\n    Submit: 'Enviar',\n    'Send Code': 'Enviar código',\n\n    // Greetings\n    Hello: 'Olá',\n\n    // Loading\n    'Loading...': 'Carregando...',\n\n    // RequireNewPassword\n    Change: 'Alterar',\n    'Change Password': 'Alterar senha',\n\n    // SignIn\n    'Sign in to your account': 'Fazer o login',\n    Password: 'Senha',\n    'Enter your password': 'Entre com sua senha',\n    'Forget your password? ': 'Esqueceu sua senha? ',\n    'Forgot your password? ': 'Esqueceu sua senha? ',\n    'Reset password': 'Resetar senha',\n    'Sign In': 'Entrar',\n    'No account? ': 'Novo cliente? ',\n    'Create account': 'Criar conta',\n\n    // SignOut\n    'Sign Out': 'Sair',\n\n    // SignUp\n    'Create Account': 'Criar conta',\n    'Have an account? ': 'Já tem conta? ',\n    'Sign in': 'Entrar',\n\n    // VerifyContact\n    'Phone Number': 'Telefone',\n    'Account recovery requires verified contact information':\n      'A recuperação da conta requer informações verificadas',\n    Verify: 'Verificar',\n    Skip: 'Pular',\n\n    // Errors\n    'An account with the given email already exists.': 'Já existe uma conta com o email fornecido.',\n    'Username cannot be empty': 'O nome de usuário não pode estar vazio',\n    'Password attempts exceeded': 'Tentativas de senha excedidas',\n    'User does not exist': 'Usuário não existe',\n    'User already exists': 'Usuário já existe',\n    'Incorrect username or password': 'Usuário ou senha incorretos',\n    'Invalid password format': 'Formato de senha inválido',\n    'Invalid phone number format': 'Formato de número de telefone inválido',\n  },\n});\n","import React, { useState, useEffect } from 'react';\n/** @jsx jsx */ import { jsx, css } from '@emotion/core';\nimport { Auth, I18n } from 'aws-amplify';\nimport { Authenticator, Greetings } from 'aws-amplify-react';\nimport { CognitoHostedUIIdentityProvider } from '@aws-amplify/auth/lib-esm/types';\nimport { UsernameAttributes } from 'aws-amplify-react/lib-esm/Auth/common/types';\nimport { IconFacebookCircle, IconGoogle } from '@cpmech/react-icons';\nimport { Pair, SpinnerAndMessage } from 'rcomps';\nimport { theme3 as theme } from './themes';\nimport { stylesGateKeeper as styles } from './styles';\nimport { gate } from './GateStore';\nimport './translations';\n\nconst signUpConfigEn = {\n  hiddenDefaults: ['phone_number'],\n  header: 'Create account',\n  signUpFields: [\n    {\n      label: 'Email',\n      key: 'email',\n      required: true,\n      placeholder: 'Enter your email',\n      type: 'email',\n      displayOrder: 1,\n    },\n    {\n      label: 'Senha',\n      key: 'password',\n      required: true,\n      placeholder: 'Enter your password',\n      type: 'password',\n      displayOrder: 2,\n    },\n  ],\n};\n\nconst signUpConfigPt = {\n  hiddenDefaults: ['phone_number'],\n  header: 'Criar nova conta',\n  signUpFields: [\n    {\n      label: 'Email',\n      key: 'email',\n      required: true,\n      placeholder: 'Entre com seu email',\n      type: 'email',\n      displayOrder: 1,\n    },\n    {\n      label: 'Senha',\n      key: 'password',\n      required: true,\n      placeholder: 'Entre com sua senha',\n      type: 'password',\n      displayOrder: 2,\n    },\n  ],\n};\n\nconst txtFacebookEn = 'Continue with Facebook';\nconst txtFacebookPt = 'Continuar com Facebook';\nconst txtGoogleEn = 'Continue with Google';\nconst txtGooglePt = 'Continuar com Google';\n\ninterface IGateKeeperProps {\n  lang?: string; // 'en' or 'pt'\n}\n\nexport const GateKeeper: React.FC<IGateKeeperProps> = ({ lang = 'pt' }) => {\n  const [loading, setLoading] = useState(true);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    setLoading(gate.state.loading);\n    setLoggedIn(gate.state.loggedIn);\n    return gate.subscribe(() => {\n      setLoading(gate.state.loading);\n      setLoggedIn(gate.state.loggedIn);\n    }, '@cpmech/gate/GateKeeper');\n  }, []);\n\n  I18n.setLanguage(lang);\n\n  const handleFacebookLogin = async () => {\n    await Auth.federatedSignIn({\n      provider: CognitoHostedUIIdentityProvider.Facebook,\n    });\n  };\n\n  const handleGoogleLogin = async () => {\n    await Auth.federatedSignIn({\n      provider: CognitoHostedUIIdentityProvider.Google,\n    });\n  };\n\n  const txt = (str: string) => <div css={styles.txt}>{str}</div>;\n\n  const renderButtons = () => (\n    <div css={styles.container}>\n      <button css={styles.facebook} onClick={handleFacebookLogin}>\n        <Pair\n          left={<IconFacebookCircle />}\n          right={lang === 'pt' ? txt(txtFacebookPt) : txt(txtFacebookEn)}\n        />\n      </button>\n      <button css={styles.google} onClick={handleGoogleLogin}>\n        <Pair left={<IconGoogle />} right={lang === 'pt' ? txt(txtGooglePt) : txt(txtGoogleEn)} />\n      </button>\n      <div css={styles.orLineContainer}>\n        <span css={styles.orLine}>{lang === 'pt' ? 'ou' : 'or'}</span>\n      </div>\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <div\n        css={css`\n          margin-top: 80px;\n          ${loading ? '' : 'display:none;'}\n        `}\n      >\n        <SpinnerAndMessage\n          color=\"#343434\"\n          message={lang === 'pt' ? 'Carregando...' : 'Loading...'}\n        />\n      </div>\n      <div\n        css={css`\n          ${!loading && !loggedIn ? '' : 'display:none;'}\n        `}\n      >\n        {renderButtons()}\n        <Authenticator\n          hide={[Greetings]}\n          theme={theme}\n          signUpConfig={lang === 'pt' ? signUpConfigPt : signUpConfigEn}\n          usernameAttributes={UsernameAttributes.EMAIL}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n/** @jsx jsx */ import { jsx, css } from '@emotion/core';\nimport { Link } from '@reach/router';\nimport { ButtonLink, TopMenu, Narrow, Wide, ITopMenuEntry, ButtonSpin } from 'rcomps';\nimport { IconAccount, IconClose } from '@cpmech/react-icons';\nimport { gate } from './GateStore';\n\ninterface IMainMenuProps {\n  NarrowLogoSvg?: React.FunctionComponent<React.SVGProps<SVGSVGElement>>;\n  NarrowLogoIcon?: React.FunctionComponent<{ size?: number; style?: React.CSSProperties }>;\n  narrowMiddleEntries?: ITopMenuEntry[];\n  narrowShowEmail?: boolean;\n  narrowLogoSize?: number;\n  narrowButtonColor?: string;\n  narrowButtonHoverColor?: string;\n  narrowButtonHeight?: number;\n  WideLogoSvg?: React.FunctionComponent<React.SVGProps<SVGSVGElement>>;\n  WideLogoIcon?: React.FunctionComponent<{ size?: number; style?: React.CSSProperties }>;\n  wideMiddleEntries?: ITopMenuEntry[];\n  wideShowEmail?: boolean;\n  wideLogoHeight?: number;\n  wideLogoWidth?: number;\n  wideMaxPageWidth?: number;\n  wideButtonColor?: string;\n  wideButtonColorDisabled?: string;\n  wideButtonColorSpinner?: string;\n  wideButtonBackgroundColor?: string;\n  wideButtonHoverColor?: string;\n  wideButtonBorderRadius?: number;\n  wideButtonFontWeight?: string;\n  wideButtonHeight?: number;\n  wideButtonWidth?: number;\n  loginText?: string;\n  logoutText?: string;\n  backgroundColor?: string;\n  emailFontSize?: string;\n  emailColor?: string;\n  getEmail?: () => string;\n}\n\nexport const MainMenu: React.FC<IMainMenuProps> = ({\n  NarrowLogoSvg,\n  NarrowLogoIcon,\n  narrowMiddleEntries = [],\n  narrowShowEmail = false,\n  narrowLogoSize = 38,\n  narrowButtonColor = '#5d5c61',\n  narrowButtonHoverColor = '#848389',\n  narrowButtonHeight = 34,\n  WideLogoSvg,\n  WideLogoIcon,\n  wideMiddleEntries = [],\n  wideShowEmail = true,\n  wideLogoHeight = 50,\n  wideLogoWidth = 100,\n  wideMaxPageWidth = 960,\n  wideButtonColor = '#ffffff',\n  wideButtonColorDisabled = '#d6d5d7',\n  wideButtonColorSpinner = '#ffffff',\n  wideButtonBackgroundColor = '#5d5c61',\n  wideButtonHoverColor = '#848389',\n  wideButtonBorderRadius = 200,\n  wideButtonFontWeight = 'bold',\n  wideButtonHeight = 34,\n  wideButtonWidth = 130,\n  loginText = 'Welcome!',\n  logoutText = 'Sign Out',\n  backgroundColor = '#c5cbe3',\n  emailFontSize = '70%',\n  emailColor = '#343434',\n  getEmail,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    setLoading(gate.state.loading);\n    setLoggedIn(gate.state.loggedIn);\n    return gate.subscribe(() => {\n      setLoading(gate.state.loading);\n      setLoggedIn(gate.state.loggedIn);\n    }, '@cpmech/gate/MainMenu');\n  }, []);\n\n  const handleLogInOut = () => {\n    if (loggedIn) {\n      gate.logout();\n    }\n  };\n\n  const access = !loading && loggedIn;\n  const email = access && getEmail ? getEmail() : '';\n\n  const narrowArray =\n    narrowShowEmail && loggedIn\n      ? narrowMiddleEntries.concat([\n          <span key=\"show-email\" style={{ fontSize: emailFontSize, color: emailColor }}>\n            {email}\n          </span>,\n        ])\n      : narrowMiddleEntries;\n\n  const wideArray =\n    wideShowEmail && loggedIn\n      ? wideMiddleEntries.concat([\n          <span key=\"show-email\" style={{ fontSize: emailFontSize, color: emailColor }}>\n            {email}\n          </span>,\n        ])\n      : wideMiddleEntries;\n\n  return (\n    <React.Fragment>\n      <Narrow>\n        <div\n          css={css`\n            background-color: ${backgroundColor};\n            ${access ? '' : 'display:none;'}\n          `}\n        >\n          <TopMenu\n            centered={true}\n            entries={[\n              <Link key=\"mainmenu-go-home\" to=\"/\">\n                {NarrowLogoSvg && <NarrowLogoSvg height={narrowLogoSize} width={narrowLogoSize} />}\n                {NarrowLogoIcon && <NarrowLogoIcon size={narrowLogoSize} />}\n              </Link>,\n\n              ...narrowArray,\n\n              <ButtonLink\n                key=\"mainmenu-login-logout\"\n                onClick={handleLogInOut}\n                color={narrowButtonColor}\n                hoverColor={narrowButtonHoverColor}\n              >\n                {loggedIn ? (\n                  <IconClose size={narrowButtonHeight} />\n                ) : (\n                  <IconAccount size={narrowButtonHeight} />\n                )}\n              </ButtonLink>,\n            ]}\n          />\n        </div>\n      </Narrow>\n      <Wide>\n        <div\n          css={css`\n            background-color: ${backgroundColor};\n            ${access ? '' : 'display:none;'}\n          `}\n        >\n          <div\n            css={css`\n              max-width: ${wideMaxPageWidth}px;\n              margin: auto;\n            `}\n          >\n            <TopMenu\n              entries={[\n                <Link key=\"mainmenu-go-home\" to=\"/\">\n                  {WideLogoSvg && <WideLogoSvg height={wideLogoHeight} width={wideLogoWidth} />}\n                  {WideLogoIcon && <WideLogoIcon size={wideLogoWidth} />}\n                </Link>,\n\n                ...wideArray,\n\n                <ButtonSpin\n                  key=\"mainmenu-login-logout\"\n                  spin={loading}\n                  disabled={false}\n                  onClick={handleLogInOut}\n                  colorSpinner={wideButtonColorSpinner}\n                  color={wideButtonColor}\n                  colorDisabled={wideButtonColorDisabled}\n                  backgroundColor={wideButtonBackgroundColor}\n                  hoverColor={wideButtonHoverColor}\n                  borderRadius={wideButtonBorderRadius}\n                  fontWeight={wideButtonFontWeight}\n                  height={wideButtonHeight}\n                  width={wideButtonWidth}\n                >\n                  {loggedIn ? logoutText : loginText}\n                </ButtonSpin>,\n              ]}\n            />\n          </div>\n        </div>\n      </Wide>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\n/** @jsx jsx */ import { jsx, css } from '@emotion/core';\nimport { RouteComponentProps } from '@reach/router';\n\ninterface IDashboardProps extends RouteComponentProps {}\n\nexport const Dashboard: React.FC<IDashboardProps> = () => {\n  return (\n    <div\n      css={css`\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 500px;\n        width: 100%;\n        font-size: 150%;\n        color: white;\n        background-color: #0984e3;\n        p {\n          margin: 100px 100px;\n        }\n      `}\n    >\n      <p>DASHBOARD</p>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n/** @jsx jsx */ import { jsx, css } from '@emotion/core';\nimport { RouteComponentProps } from '@reach/router';\nimport Auth from '@aws-amplify/auth';\nimport { GraphQLClient } from 'graphql-request';\nimport { Button } from 'rcomps';\n\ninterface IHomeProps extends RouteComponentProps {}\n\nexport const Home: React.FC<IHomeProps> = () => {\n  const [text, setText] = useState(`query {\n  version\n}`);\n  const [results, setResults] = useState('');\n\n  const run = async () => {\n    try {\n      const session = await Auth.currentSession();\n      const idToken = session.getIdToken().getJwtToken();\n      const client = new GraphQLClient(`https://api-dev.azcdk.xyz/graphql`, {\n        headers: {\n          authorization: `Bearer ${idToken}`,\n        },\n      });\n      const res = await client.request(text);\n      console.log(res);\n      setResults(res);\n    } catch (error) {\n      alert(JSON.stringify(error));\n    }\n  };\n\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        height: 500px;\n        width: 100%;\n        font-size: 150%;\n        color: #343434;\n        background-color: #bde0fc;\n        p {\n          margin: 100px 100px;\n        }\n        textarea {\n          width: 100%;\n          padding: 10px;\n          border: 3px solid #999;\n          -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n          -moz-box-sizing: border-box; /* Firefox, other Gecko */\n          box-sizing: border-box; /* IE 8+ */\n        }\n      `}\n    >\n      <div\n        css={css`\n          margin-bottom: 20px;\n          max-width: 960px;\n        `}\n      >\n        <textarea\n          value={text}\n          onChange={e => setText(e.target.value)}\n          name=\"graphql\"\n          rows={10}\n          cols={100}\n        ></textarea>\n      </div>\n      <div>\n        <Button onClick={run}>Run</Button>\n      </div>\n      <div\n        css={css`\n          margin-top: 20px;\n        `}\n      >\n        <p>{results}</p>\n      </div>\n    </div>\n  );\n};\n\n// private async getAuthorizationHeader() {\n// const session = await this.auth.currentSession();\n// either id token or access token based on the API\n// const idToken = session.getIdToken().getJwtToken();\n// return {Authorization: idToken}\n// }\n","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\n\ninterface INotFoundProps extends RouteComponentProps {}\n\nexport const NotFound: React.FC<INotFoundProps> = () => {\n  return (\n    <div>\n      <p>NOT FOUND</p>\n    </div>\n  );\n};\n","import Amplify from 'aws-amplify';\n\nexport const init = (\n  userPoolId: string,\n  userPoolWebClientId: string,\n  oauthDomain: string,\n  redirectSignIn = 'https://localhost:3000/',\n  redirectSignOut = 'https://localhost:3000/',\n  awsRegion = 'us-east-1',\n) => {\n  Amplify.configure({\n    Auth: {\n      region: awsRegion,\n      userPoolId,\n      userPoolWebClientId,\n      oauth: {\n        domain: oauthDomain,\n        scope: ['phone', 'email', 'profile', 'openid', 'aws.cognito.signin.user.admin'],\n        responseType: 'code',\n        redirectSignIn,\n        redirectSignOut,\n      },\n    },\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport { Router, Link } from '@reach/router';\nimport { GateKeeper, MainMenu, init, gate } from 'gate';\nimport { IconHouseThreeD } from '@cpmech/react-icons';\nimport { Dashboard, Home, NotFound } from './pages';\n\ninit(\n  'us-east-1_dCZGZU74z',\n  '5cdculovevq2kqdhj5forn2288',\n  'azcdk.auth.us-east-1.amazoncognito.com',\n  'https://localhost:3000/',\n  'https://localhost:3000/',\n);\n\nconst entries = [\n  <Link key=\"link-to-dashboard\" to=\"/dashboard\">\n    <span>DASHBOARD</span>\n  </Link>,\n];\n\nexport const App: React.FC = () => {\n  const [access, setAccess] = useState(false);\n\n  useEffect(() => {\n    setAccess(gate.access());\n    return gate.subscribe(() => setAccess(gate.access()), 'az-cdk-examples-App');\n  }, []);\n\n  return (\n    <React.Fragment>\n      <GateKeeper />\n      <MainMenu\n        NarrowLogoIcon={IconHouseThreeD}\n        WideLogoIcon={IconHouseThreeD}\n        wideLogoWidth={60}\n        narrowMiddleEntries={entries}\n        wideMiddleEntries={entries}\n      />\n      {access && (\n        <Router>\n          <Home path=\"/\" />\n          <Dashboard path=\"/dashboard\" />\n          <NotFound default />\n        </Router>\n      )}\n    </React.Fragment>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}